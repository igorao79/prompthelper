"""
–ú–µ–Ω–µ–¥–∂–µ—Ä –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
–í—ã–¥–µ–ª–µ–Ω –∏–∑ utils.py –¥–ª—è –ª—É—á—à–µ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
"""

import json
import os
from pathlib import Path

def get_desktop_path():
    """
    –ü–æ–ª—É—á–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø—É—Ç—å –∫ —Ä–∞–±–æ—á–µ–º—É —Å—Ç–æ–ª—É –≤ Windows
    
    Returns:
        Path: –ü—É—Ç—å –∫ —Ä–∞–±–æ—á–µ–º—É —Å—Ç–æ–ª—É
    """
    try:
        # –î–ª—è Windows –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é USERPROFILE
        if os.name == 'nt':  # Windows
            # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –ø—É—Ç—å –∫ —Ä–∞–±–æ—á–µ–º—É —Å—Ç–æ–ª—É —á–µ—Ä–µ–∑ —Ä–µ–µ—Å—Ç—Ä
            try:
                import winreg
                with winreg.OpenKey(winreg.HKEY_CURRENT_USER, 
                                  r"Software\Microsoft\Windows\CurrentVersion\Explorer\Shell Folders") as key:
                    desktop_path = winreg.QueryValueEx(key, "Desktop")[0]
                    return Path(desktop_path)
            except:
                pass
            
            # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã
            desktop_paths = [
                Path(os.path.expanduser("~/Desktop")),
                Path(os.path.expanduser("~/–†–∞–±–æ—á–∏–π —Å—Ç–æ–ª")),
                Path(os.path.join(os.path.expanduser("~"), "Desktop")),
                Path(os.path.join(os.path.expanduser("~"), "–†–∞–±–æ—á–∏–π —Å—Ç–æ–ª")),
                Path(os.environ.get('USERPROFILE', '')) / "Desktop",
                Path(os.environ.get('USERPROFILE', '')) / "–†–∞–±–æ—á–∏–π —Å—Ç–æ–ª"
            ]
            
            for path in desktop_paths:
                if path.exists():
                    return path
        
        # –î–ª—è –¥—Ä—É–≥–∏—Ö –û–°
        return Path.home() / "Desktop"
        
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ä–∞–±–æ—á–µ–≥–æ —Å—Ç–æ–ª–∞: {e}")
        return Path.home() / "Desktop"

class SettingsManager:
    """–ú–µ–Ω–µ–¥–∂–µ—Ä –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–æ–≥—Ä–∞–º–º—ã"""
    
    def __init__(self):
        # –•—Ä–∞–Ω–∏–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ –¥–æ–º–∞—à–Ω–µ–π –ø–∞–ø–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        self.settings_file = Path.home() / "landing_generator_settings.json"
        self.settings = self.load_settings()
    
    def load_settings(self):
        """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ —Ñ–∞–π–ª–∞"""
        default_settings = {
            "favorite_countries": [],
            "theme_history": [],
            "default_save_path": str(get_desktop_path()),
            "last_save_path": str(get_desktop_path()),
            "custom_prompt": ""
        }
        
        print(f"üîç –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∏–∑: {self.settings_file}")
        
        try:
            if self.settings_file.exists():
                with open(self.settings_file, 'r', encoding='utf-8') as f:
                    saved_settings = json.load(f)
                    # –û–±—ä–µ–¥–∏–Ω—è–µ–º —Å –¥–µ—Ñ–æ–ª—Ç–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
                    default_settings.update(saved_settings)
                print(f"‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ")
                print(f"üìä –ò–∑–±—Ä–∞–Ω–Ω—ã—Ö —Å—Ç—Ä–∞–Ω: {len(default_settings['favorite_countries'])}")
                print(f"üìù –¢–µ–º–∞—Ç–∏–∫ –≤ –∏—Å—Ç–æ—Ä–∏–∏: {len(default_settings['theme_history'])}")
            else:
                print(f"‚ÑπÔ∏è –§–∞–π–ª –Ω–∞—Å—Ç—Ä–æ–µ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é")
                self.save_settings()  # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª —Å –¥–µ—Ñ–æ–ª—Ç–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
                    
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫: {e}")
        
        return default_settings
    
    def save_settings(self):
        """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ —Ñ–∞–π–ª"""
        try:
            with open(self.settings_file, 'w', encoding='utf-8') as f:
                json.dump(self.settings, f, ensure_ascii=False, indent=2)
            print(f"‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: {self.settings_file}")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫: {e}")
    
    def add_favorite_country(self, country):
        """–î–æ–±–∞–≤–ª—è–µ—Ç —Å—Ç—Ä–∞–Ω—É –≤ –∏–∑–±—Ä–∞–Ω–Ω—ã–µ"""
        if country not in self.settings["favorite_countries"]:
            self.settings["favorite_countries"].insert(0, country)
            # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö
            self.settings["favorite_countries"] = self.settings["favorite_countries"][:10]
            self.save_settings()
    
    def remove_favorite_country(self, country):
        """–£–¥–∞–ª—è–µ—Ç —Å—Ç—Ä–∞–Ω—É –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö"""
        if country in self.settings["favorite_countries"]:
            self.settings["favorite_countries"].remove(country)
            self.save_settings()
    
    def add_theme_to_history(self, theme):
        """–î–æ–±–∞–≤–ª—è–µ—Ç —Ç–µ–º–∞—Ç–∏–∫—É –≤ –∏—Å—Ç–æ—Ä–∏—é"""
        theme = theme.strip()
        if theme and theme not in self.settings["theme_history"]:
            self.settings["theme_history"].insert(0, theme)
            # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –¥–æ 10 —ç–ª–µ–º–µ–Ω—Ç–æ–≤
            self.settings["theme_history"] = self.settings["theme_history"][:10]
            self.save_settings()
    
    def get_favorite_countries(self):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö —Å—Ç—Ä–∞–Ω"""
        return self.settings.get("favorite_countries", [])
    
    def get_theme_history(self):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—é —Ç–µ–º–∞—Ç–∏–∫"""
        return self.settings.get("theme_history", [])
    
    def set_save_path(self, path):
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ø—É—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è"""
        self.settings["last_save_path"] = str(path)
        self.save_settings()
    
    def get_save_path(self):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–π –ø—É—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è"""
        return self.settings.get("last_save_path", str(get_desktop_path()))

    def save_prompt(self, prompt):
        """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –ø—Ä–æ–º–ø—Ç"""
        self.settings["custom_prompt"] = prompt
        self.save_settings()
        
    def get_prompt(self):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π –ø—Ä–æ–º–ø—Ç"""
        return self.settings.get("custom_prompt", "") 