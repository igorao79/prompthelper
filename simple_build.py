#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç —Å–±–æ—Ä–∫–∏ EXE —Ñ–∞–π–ª–∞
–ë–µ–∑ –∫–∏—Ä–∏–ª–ª–∏—Ü—ã –∏ —Å–ª–æ–∂–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
"""

import os
import sys
import subprocess
import shutil
from pathlib import Path

def clean_build():
    """–û—á–∏—â–∞–µ—Ç –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Å–±–æ—Ä–∫–∏"""
    print("üßπ –û—á–∏—Å—Ç–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Å–±–æ—Ä–æ–∫...")
    
    # –£–¥–∞–ª—è–µ–º –ø–∞–ø–∫–∏
    for folder in ['build', 'dist']:
        if os.path.exists(folder):
            shutil.rmtree(folder)
            print(f"   ‚úÖ –£–¥–∞–ª–µ–Ω–∞ –ø–∞–ø–∫–∞: {folder}")
    
    # –£–¥–∞–ª—è–µ–º spec —Ñ–∞–π–ª—ã
    for spec_file in Path('.').glob('*.spec'):
        os.remove(spec_file)
        print(f"   ‚úÖ –£–¥–∞–ª–µ–Ω —Ñ–∞–π–ª: {spec_file}")

def install_requirements():
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"""
    print("üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    required_packages = [
        'tkinter',
        'pillow',
        'requests',
        'pyinstaller',
    ]
    
    for package in required_packages:
        try:
            subprocess.run([sys.executable, '-m', 'pip', 'install', package], 
                         check=True, capture_output=True)
            print(f"   ‚úÖ {package}")
        except subprocess.CalledProcessError:
            print(f"   ‚ö†Ô∏è {package} (—É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω)")

def create_launcher():
    """–°–æ–∑–¥–∞–µ—Ç –ø—Ä–æ—Å—Ç–æ–π –ª–∞—É–Ω—á–µ—Ä"""
    launcher_code = '''#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π –ª–∞—É–Ω—á–µ—Ä –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ –ª–µ–Ω–¥–∏–Ω–≥–æ–≤
"""

import sys
import os
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç–∏ –∫ –º–æ–¥—É–ª—è–º
current_dir = Path(__file__).parent
sys.path.insert(0, str(current_dir))

try:
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –≥–ª–∞–≤–Ω—ã–π –º–æ–¥—É–ª—å
    from main import main
    
    if __name__ == "__main__":
        main()
        
except Exception as e:
    print(f"–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")
    input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")
'''
    
    with open('launcher.py', 'w', encoding='utf-8') as f:
        f.write(launcher_code)
    
    print("‚úÖ –°–æ–∑–¥–∞–Ω launcher.py")

def build_exe():
    """–°–æ–±–∏—Ä–∞–µ—Ç EXE —Ñ–∞–π–ª"""
    print("üî® –°–±–æ—Ä–∫–∞ EXE —Ñ–∞–π–ª–∞...")
    
    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–±–æ—Ä–∫–∏
    build_cmd = [
        sys.executable, '-m', 'PyInstaller',
        '--onefile',                    # –û–¥–∏–Ω —Ñ–∞–π–ª
        '--noconsole',                  # –ë–µ–∑ –∫–æ–Ω—Å–æ–ª–∏
        '--name=LandingGenerator',      # –ò–º—è –±–µ–∑ –∫–∏—Ä–∏–ª–ª–∏—Ü—ã
        '--add-data=generators;generators',
        '--add-data=api;api',
        '--add-data=core;core', 
        '--add-data=shared;shared',
        '--hidden-import=tkinter',
        '--hidden-import=PIL',
        '--hidden-import=requests',
        '--hidden-import=json',
        '--hidden-import=threading',
        '--hidden-import=urllib',
        '--hidden-import=pathlib',
        '--hidden-import=datetime',
        '--hidden-import=subprocess',
        '--hidden-import=webbrowser',
        '--hidden-import=winreg',
        'launcher.py'
    ]
    
    try:
        subprocess.run(build_cmd, check=True)
        print("‚úÖ EXE —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
        return True
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ü–†–û–°–¢–ê–Ø –°–ë–û–†–ö–ê EXE –§–ê–ô–õ–ê")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Python
    print(f"üêç Python: {sys.version}")
    print(f"üìÅ –†–∞–±–æ—á–∞—è –ø–∞–ø–∫–∞: {os.getcwd()}")
    
    # –®–∞–≥–∏ —Å–±–æ—Ä–∫–∏
    steps = [
        ("–û—á–∏—Å—Ç–∫–∞", clean_build),
        ("–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π", install_requirements),
        ("–°–æ–∑–¥–∞–Ω–∏–µ –ª–∞—É–Ω—á–µ—Ä–∞", create_launcher),
        ("–°–±–æ—Ä–∫–∞ EXE", build_exe),
    ]
    
    for step_name, step_func in steps:
        print(f"\nüìç {step_name}...")
        try:
            result = step_func()
            if result is False:
                print(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞ —ç—Ç–∞–ø–µ: {step_name}")
                return False
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞ —ç—Ç–∞–ø–µ {step_name}: {e}")
            return False
    
    print("\n" + "=" * 50)
    print("üéâ –°–ë–û–†–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê!")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    exe_path = Path('dist/LandingGenerator.exe')
    if exe_path.exists():
        file_size = exe_path.stat().st_size / (1024 * 1024)  # MB
        print(f"‚úÖ –§–∞–π–ª —Å–æ–∑–¥–∞–Ω: {exe_path}")
        print(f"üìä –†–∞–∑–º–µ—Ä: {file_size:.1f} MB")
        print(f"üéØ –ì–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")
    else:
        print("‚ùå EXE —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return False
    
    return True

if __name__ == "__main__":
    success = main()
    
    if not success:
        print("\n‚ö†Ô∏è –°–±–æ—Ä–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å!")
        print("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—à–∏–±–∫–∏ –≤—ã—à–µ")
    
    input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...") 