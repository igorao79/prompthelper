# -*- coding: utf-8 -*-

"""
–ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∫–æ–º–±–æ–±–æ–∫—Å–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–µ–º–∞—Ç–∏–∫ —Å –∏—Å—Ç–æ—Ä–∏–µ–π
"""

import tkinter as tk
from tkinter import ttk, messagebox


class ThemeHistoryCombobox(ttk.Frame):
    """–ö–æ–º–±–æ–±–æ–∫—Å —Å –∏—Å—Ç–æ—Ä–∏–µ–π –¥–ª—è —Ç–µ–º–∞—Ç–∏–∫"""
    
    def __init__(self, parent, textvariable=None):
        super().__init__(parent)
        
        self.textvariable = textvariable or tk.StringVar()
        self.history = []
        
        self.setup_ui()
    
    def setup_ui(self):
        """–°–æ–∑–¥–∞–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å"""
        # –û—Å–Ω–æ–≤–Ω–æ–µ –ø–æ–ª–µ –≤–≤–æ–¥–∞
        self.entry = tk.Entry(
            self, 
            textvariable=self.textvariable,
            font=("Arial", 13),
            width=70
        )
        self.entry.pack(fill="x", ipady=3)
        
        # –ö–Ω–æ–ø–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏
        self.history_btn = tk.Button(
            self,
            text="üìã",
            command=self.show_history,
            width=3,
            font=("Arial", 10)
        )
        self.history_btn.pack(side="right", padx=(5, 0))
    
    def set_history(self, history):
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—é —Ç–µ–º–∞—Ç–∏–∫"""
        self.history = history
    
    def show_history(self):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—é —Ç–µ–º–∞—Ç–∏–∫"""
        if not self.history:
            messagebox.showinfo("–ò—Å—Ç–æ—Ä–∏—è", "–ò—Å—Ç–æ—Ä–∏—è —Ç–µ–º–∞—Ç–∏–∫ –ø—É—Å—Ç–∞")
            return
        
        # –°–æ–∑–¥–∞–µ–º –æ–∫–Ω–æ –≤—ã–±–æ—Ä–∞
        history_window = tk.Toplevel(self)
        history_window.title("–ò—Å—Ç–æ—Ä–∏—è —Ç–µ–º–∞—Ç–∏–∫")
        history_window.geometry("400x300")
        history_window.transient(self)
        history_window.grab_set()
        
        # –°–ø–∏—Å–æ–∫ –∏—Å—Ç–æ—Ä–∏–∏
        listbox = tk.Listbox(history_window, font=("Arial", 10))
        listbox.pack(fill="both", expand=True, padx=10, pady=10)
        
        for theme in self.history:
            listbox.insert(tk.END, theme)
        
        # –ö–Ω–æ–ø–∫–∏
        btn_frame = tk.Frame(history_window)
        btn_frame.pack(fill="x", padx=10, pady=(0, 10))
        
        def select_theme():
            selection = listbox.curselection()
            if selection:
                selected_theme = listbox.get(selection[0])
                self.textvariable.set(selected_theme)
                history_window.destroy()
        
        select_btn = tk.Button(
            btn_frame,
            text="–í—ã–±—Ä–∞—Ç—å",
            command=select_theme,
            bg="#27ae60",
            fg="white",
            font=("Arial", 10, "bold")
        )
        select_btn.pack(side="right", padx=(5, 0))
        
        close_btn = tk.Button(
            btn_frame,
            text="–ó–∞–∫—Ä—ã—Ç—å",
            command=history_window.destroy,
            bg="#e74c3c",
            fg="white",
            font=("Arial", 10, "bold")
        )
        close_btn.pack(side="right")
        
        # –î–≤–æ–π–Ω–æ–π –∫–ª–∏–∫ –¥–ª—è –≤—ã–±–æ—Ä–∞
        listbox.bind("<Double-Button-1>", lambda e: select_theme()) 