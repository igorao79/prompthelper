#!/usr/bin/env python3
"""
–î–µ—Ç–∞–ª—å–Ω–∞—è –æ—Ç–ª–∞–¥–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å –≤—ã–≤–æ–¥–æ–º –æ—à–∏–±–æ–∫
"""

import os
import tempfile
from pathlib import Path
import traceback

def debug_single_image():
    """–û—Ç–ª–∞–¥–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ–¥–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
    print("üîç –î–ï–¢–ê–õ–¨–ù–ê–Ø –û–¢–õ–ê–î–ö–ê –û–î–ù–û–ì–û –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–Ø")
    print("=" * 50)
    
    try:
        from generators.image_generator import ImageGenerator
        
        # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        test_dir = tempfile.mkdtemp()
        print(f"üìÅ –¢–µ—Å—Ç–æ–≤–∞—è –ø–∞–ø–∫–∞: {test_dir}")
        
        # –°–æ–∑–¥–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä
        generator = ImageGenerator(silent_mode=False, use_icons8_for_favicons=True)
        print("‚úÖ –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å–æ–∑–¥–∞–Ω")
        
        # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ–º–ø—Ç—ã
        prompts, theme_data = generator._generate_prompts("–∫–∞—Ñ–µ")
        print(f"üìù –ü—Ä–æ–º–ø—Ç—ã –ø–æ–ª—É—á–µ–Ω—ã: {len(prompts)}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–¥–∏–Ω –ø—Ä–æ–º–ø—Ç
        test_prompt = prompts.get('main', 'cozy coffee shop')
        print(f"üéØ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–º–ø—Ç: {test_prompt}")
        
        # –ü—Ä–æ–±—É–µ–º –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        try:
            result = generator._generate_image_via_pollinations(test_prompt, 'main', test_dir)
            print(f"üéØ –†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
            
            if result:
                print("‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ —É—Å–ø–µ—à–Ω–æ")
                print(f"üìÅ –ü—É—Ç—å: {result}")
            else:
                print("‚ùå –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ —Å–æ–∑–¥–∞–Ω–æ")
            
        except Exception as e:
            print(f"‚ùå –û–®–ò–ë–ö–ê –≤ _generate_image_via_pollinations: {e}")
            traceback.print_exc()
            
    except Exception as e:
        print(f"‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞: {e}")
        traceback.print_exc()

def debug_requests():
    """–û—Ç–ª–∞–¥–∫–∞ requests"""
    print("\nüîç –û–¢–õ–ê–î–ö–ê REQUESTS")
    print("=" * 30)
    
    try:
        import requests
        from urllib.parse import quote
        
        # –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –∑–∞–ø—Ä–æ—Å–∞
        test_prompt = "cozy coffee shop interior"
        encoded = quote(test_prompt)
        url = f"https://image.pollinations.ai/prompt/{encoded}?width=512&height=512&model=flux"
        
        print(f"üåê URL: {url}")
        
        response = requests.get(url, timeout=10)
        print(f"üìä –°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"üì¶ –†–∞–∑–º–µ—Ä –æ—Ç–≤–µ—Ç–∞: {len(response.content)} –±–∞–π—Ç")
        
        if response.status_code == 200:
            print("‚úÖ –ó–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–µ–Ω")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ requests: {e}")
        traceback.print_exc()

def debug_pil():
    """–û—Ç–ª–∞–¥–∫–∞ PIL"""
    print("\nüîç –û–¢–õ–ê–î–ö–ê PIL")
    print("=" * 20)
    
    try:
        from PIL import Image
        from io import BytesIO
        
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        img = Image.new('RGB', (100, 100), color='red')
        print("‚úÖ PIL Image —Å–æ–∑–¥–∞–Ω")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º BytesIO
        buffer = BytesIO()
        img.save(buffer, format='JPEG')
        print(f"‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ BytesIO: {len(buffer.getvalue())} –±–∞–π—Ç")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ PIL: {e}")
        traceback.print_exc()

if __name__ == "__main__":
    debug_requests()
    debug_pil()
    debug_single_image() 