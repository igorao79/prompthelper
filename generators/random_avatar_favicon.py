#!/usr/bin/env python3
"""
–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Ñ–∞–≤–∏–∫–æ–Ω–æ–∫ –Ω–∞ –æ—Å–Ω–æ–≤–µ Avatar Placeholder API
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π API –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–ª—É—á–∞–π–Ω—ã—Ö –∞–≤–∞—Ç–∞—Ä–æ–≤
"""

import requests
import random
import hashlib
import os
from pathlib import Path
from PIL import Image
from io import BytesIO
import time

class RandomAvatarFavicon:
    """–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Ñ–∞–≤–∏–∫–æ–Ω–æ–∫ —á–µ—Ä–µ–∑ Avatar Placeholder API"""
    
    def __init__(self, silent_mode=False):
        self.silent_mode = silent_mode
        self.base_url = "https://avatar.iran.liara.run"
        
        # –¢–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –∏–º–µ–Ω–∞ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –±–∏–∑–Ω–µ—Å–æ–≤
        self.business_names = {
            '–∫–∞—Ñ–µ': ['Coffee', 'Espresso', 'Latte', 'Cappuccino', 'Mocha', 'Barista', 'Bean', 'Brew'],
            '–∫–æ—Ñ–µ–π–Ω—è': ['Coffee', 'Espresso', 'Latte', 'Cappuccino', 'Mocha', 'Barista', 'Bean', 'Brew'],
            '—Ä–µ—Å—Ç–æ—Ä–∞–Ω': ['Chef', 'Cook', 'Diner', 'Taste', 'Flavor', 'Dish', 'Menu', 'Grill'],
            '–∞–≤—Ç–æ–º–æ–π–∫–∞': ['Clean', 'Wash', 'Shine', 'Auto', 'Car', 'Polish', 'Soap', 'Rinse'],
            '–ø–∞—Ä–∏–∫–º–∞—Ö–µ—Ä—Å–∫–∞—è': ['Style', 'Cut', 'Hair', 'Trim', 'Salon', 'Stylist', 'Shear', 'Clip'],
            '—Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏—è': ['Dental', 'Tooth', 'Smile', 'Care', 'Clean', 'White', 'Bright', 'Health'],
            '—Ñ–∏—Ç–Ω–µ—Å': ['Fit', 'Strong', 'Power', 'Gym', 'Active', 'Sport', 'Train', 'Muscle'],
            '—Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ': ['Build', 'Construct', 'Hammer', 'Tool', 'Brick', 'Steel', 'Fix', 'Make'],
            '—Å–∞–ª–æ–Ω': ['Beauty', 'Style', 'Glam', 'Shine', 'Look', 'Elegant', 'Chic', 'Pretty'],
            '—é—Ä–∏—Å—Ç': ['Legal', 'Law', 'Justice', 'Right', 'Fair', 'Judge', 'Case', 'Court'],
            '–º–µ–¥–∏—Ü–∏–Ω': ['Health', 'Care', 'Doctor', 'Heal', 'Med', 'Clinic', 'Safe', 'Well'],
            '—Ç–µ—Ö–Ω–æ–ª–æ–≥': ['Tech', 'Digital', 'Code', 'Smart', 'Data', 'Logic', 'Cyber', 'Net'],
            '–æ–±—Ä–∞–∑–æ–≤–∞–Ω': ['Learn', 'Study', 'Know', 'Teach', 'Brain', 'Mind', 'Smart', 'Wise'],
            '—Ñ–∏–Ω–∞–Ω—Å': ['Money', 'Bank', 'Gold', 'Rich', 'Save', 'Invest', 'Profit', 'Cash'],
            '–Ω–µ–¥–≤–∏–∂–∏–º': ['House', 'Home', 'Build', 'Estate', 'Key', 'Door', 'Roof', 'Room'],
            '–¥–æ—Å—Ç–∞–≤–∫–∞': ['Fast', 'Quick', 'Speed', 'Rush', 'Move', 'Go', 'Send', 'Bring'],
            '–µ–¥—ã': ['Food', 'Meal', 'Eat', 'Taste', 'Fresh', 'Yummy', 'Dish', 'Cook'],
            '–µ–¥–∞': ['Food', 'Meal', 'Eat', 'Taste', 'Fresh', 'Yummy', 'Dish', 'Cook'],
            '–¥–æ—Å—Ç–∞–≤–∫–∞ –µ–¥—ã': ['Food', 'Meal', 'Eat', 'Taste', 'Fresh', 'Yummy', 'Dish', 'Cook'],
            '–¥–æ—Å—Ç–∞–≤–∫–∏ –µ–¥—ã': ['Food', 'Meal', 'Eat', 'Taste', 'Fresh', 'Yummy', 'Dish', 'Cook'],
        }
        
        # –û–±—â–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –¥–ª—è –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö —Ç–µ–º–∞—Ç–∏–∫
        self.default_names = [
            'Business', 'Pro', 'Expert', 'Master', 'Best', 'Top', 'Prime', 'Elite',
            'Smart', 'Quick', 'Fast', 'Easy', 'Simple', 'Good', 'Great', 'Super'
        ]
        
        if not self.silent_mode:
            print("üé≠ RandomAvatarFavicon –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
    
    def generate_favicon(self, theme, output_path):
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ñ–∞–≤–∏–∫–æ–Ω–∫—É –¥–ª—è —Ç–µ–º–∞—Ç–∏–∫–∏"""
        try:
            # –ü–æ–ª—É—á–∞–µ–º –∏–º—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
            name = self._get_theme_name(theme)
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –∞–≤–∞—Ç–∞—Ä–∞
            avatar_type = self._get_avatar_type(theme)
            
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º URL
            if avatar_type == 'initials':
                url = f"{self.base_url}/username?username={name}"
            elif avatar_type == 'boy':
                url = f"{self.base_url}/public/boy"
            elif avatar_type == 'girl':
                url = f"{self.base_url}/public/girl"
            else:
                url = f"{self.base_url}/public"
            
            if not self.silent_mode:
                print(f"üåê –ó–∞–ø—Ä–æ—Å –∫ Avatar API: {name} ({avatar_type})")
            
            # –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            response = requests.get(url, timeout=10)
            response.raise_for_status()
            
            # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ —Ñ–∞–≤–∏–∫–æ–Ω–∫—É
            image = Image.open(BytesIO(response.content))
            
            # –£–±–µ–∂–¥–∞–µ–º—Å—è —á—Ç–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–µ
            if image.size[0] != image.size[1]:
                min_size = min(image.size)
                image = image.crop((0, 0, min_size, min_size))
            
            # –ò–∑–º–µ–Ω—è–µ–º —Ä–∞–∑–º–µ—Ä –¥–ª—è —Ñ–∞–≤–∏–∫–æ–Ω–∫–∏
            image = image.resize((256, 256), Image.Resampling.LANCZOS)
            
            # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ RGB –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
            if image.mode != 'RGB':
                image = image.convert('RGB')
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º
            image.save(output_path, format='PNG')
            
            if not self.silent_mode:
                print(f"‚úÖ –§–∞–≤–∏–∫–æ–Ω–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞: {output_path}")
            
            return True
            
        except Exception as e:
            if not self.silent_mode:
                print(f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ñ–∞–≤–∏–∫–æ–Ω–∫–∏: {e}")
            return False
    
    def _get_theme_name(self, theme):
        """–ü–æ–ª—É—á–∞–µ—Ç –∏–º—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–º–∞—Ç–∏–∫–∏"""
        theme_lower = theme.lower()
        
        # –ò—â–µ–º –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –∏–º–µ–Ω–∞ –¥–ª—è —Ç–µ–º–∞—Ç–∏–∫–∏
        for key, names in self.business_names.items():
            if key in theme_lower:
                return random.choice(names)
        
        # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω–æ–µ –∏–º—è, –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—â–µ–µ
        return random.choice(self.default_names)
    
    def _get_avatar_type(self, theme):
        """–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ç–∏–ø –∞–≤–∞—Ç–∞—Ä–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–º–∞—Ç–∏–∫–∏"""
        theme_lower = theme.lower()
        
        # –î–ª—è –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —Ç–µ–º–∞—Ç–∏–∫ –ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏–Ω–∏—Ü–∏–∞–ª—ã
        if any(word in theme_lower for word in ['—Ç–µ—Ö–Ω–æ–ª–æ–≥', '—Ñ–∏–Ω–∞–Ω—Å', '—é—Ä–∏—Å—Ç', '–º–µ–¥–∏—Ü–∏–Ω']):
            return 'initials'
        
        # –î–ª—è —Å–∞–ª–æ–Ω–æ–≤ –∫—Ä–∞—Å–æ—Ç—ã –ª—É—á—à–µ –∂–µ–Ω—Å–∫–∏–µ –∞–≤–∞—Ç–∞—Ä—ã
        if any(word in theme_lower for word in ['—Å–∞–ª–æ–Ω', '–ø–∞—Ä–∏–∫–º–∞—Ö–µ—Ä—Å–∫–∞—è', '–∫–æ—Å–º–µ—Ç–æ–ª–æ–≥']):
            return 'girl'
        
        # –î–ª—è —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞ –∏ –∞–≤—Ç–æ—Å–µ—Ä–≤–∏—Å–∞ - –º—É–∂—Å–∫–∏–µ
        if any(word in theme_lower for word in ['—Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ', '–∞–≤—Ç–æ–º–æ–π–∫–∞', '–º–µ—Ö–∞–Ω–∏–∫']):
            return 'boy'
        
        # –î–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö - —Å–ª—É—á–∞–π–Ω—ã–π –≤—ã–±–æ—Ä
        return random.choice(['public', 'boy', 'girl', 'initials'])
    
    def generate_diverse_set(self, themes, output_dir):
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–π –Ω–∞–±–æ—Ä —Ñ–∞–≤–∏–∫–æ–Ω–æ–∫ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–µ–º–∞—Ç–∏–∫"""
        os.makedirs(output_dir, exist_ok=True)
        
        results = []
        for i, theme in enumerate(themes):
            output_path = os.path.join(output_dir, f"favicon_{i+1}.png")
            success = self.generate_favicon(theme, output_path)
            results.append(success)
            
            # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
            if i < len(themes) - 1:
                time.sleep(0.5)
        
        return results

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –∫–æ–¥–µ
def generate_random_avatar_favicon(theme, output_path, silent_mode=False):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–ª—É—á–∞–π–Ω—É—é —Ñ–∞–≤–∏–∫–æ–Ω–∫—É-–∞–≤–∞—Ç–∞—Ä –¥–ª—è —Ç–µ–º–∞—Ç–∏–∫–∏"""
    generator = RandomAvatarFavicon(silent_mode=silent_mode)
    return generator.generate_favicon(theme, output_path)

if __name__ == "__main__":
    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    generator = RandomAvatarFavicon()
    
    test_themes = [
        "–∫–∞—Ñ–µ", "–∞–≤—Ç–æ–º–æ–π–∫–∞", "–ø–∞—Ä–∏–∫–º–∞—Ö–µ—Ä—Å–∫–∞—è", "—Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏—è", 
        "—Ñ–∏—Ç–Ω–µ—Å", "—Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ", "–¥–æ—Å—Ç–∞–≤–∫–∞ –µ–¥—ã", "—é—Ä–∏—Å—Ç"
    ]
    
    results = generator.generate_diverse_set(test_themes, "test_avatars")
    print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç—ã: {sum(results)}/{len(results)} —É—Å–ø–µ—à–Ω–æ") 