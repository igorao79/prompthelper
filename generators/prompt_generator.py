"""
–£–º–Ω—ã–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ø—Ä–æ–º–ø—Ç–æ–≤ –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
–†–∞–∑–±–∏—Ç –∏–∑ smart_prompt_generator.py –¥–ª—è –ª—É—á—à–µ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
"""

import random
from .translations import TRANSLATIONS, BUSINESS_TYPES

class SmartPromptGenerator:
    """–£–ú–ù–ê–Ø —Å–∏—Å—Ç–µ–º–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–æ–º–ø—Ç–æ–≤ –¥–ª—è –ª—é–±—ã—Ö —Ç–µ–º–∞—Ç–∏–∫ –ë–ï–ó –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞"""
    
    def __init__(self):
        self.translations = TRANSLATIONS
        self.business_types = BUSINESS_TYPES
    
    def analyze_theme(self, theme, silent_mode=False):
        """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ç–µ–º–∞—Ç–∏–∫—É –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–æ–º–ø—Ç–æ–≤"""
        if not silent_mode:
            print(f"üß† –ê–Ω–∞–ª–∏–∑ —Ç–µ–º–∞—Ç–∏–∫–∏: {theme}")
        
        theme_lower = theme.lower()
        found_terms = []
        activity_type = 'service'
        
        # –ü–æ–∏—Å–∫ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –≤ —Ç–µ–º–∞—Ç–∏–∫–µ (–∏–∑–±–µ–≥–∞–µ–º –ª–æ–∂–Ω—ã—Ö —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏–π –Ω–∞ –ø–æ–¥—Å—Ç—Ä–æ–∫–∏)
        theme_words = theme_lower.split()  # –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Å–ª–æ–≤–∞
        
        for ru_word, en_word in self.translations.items():
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ —Å–æ —Å–ª–æ–≤–∞–º–∏ –∏–ª–∏ –≤—Ö–æ–∂–¥–µ–Ω–∏–µ –∫–∞–∫ –Ω–∞—á–∞–ª–æ/–∫–æ–Ω–µ—Ü —Å–ª–æ–≤–∞
            word_found = False
            
            for theme_word in theme_words:
                # –¢–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
                if ru_word == theme_word:
                    word_found = True
                    break
                # –°–ª–æ–≤–æ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –∫–ª—é—á–µ–≤–æ–≥–æ —Å–ª–æ–≤–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–∫—É—Ä—Å—ã" –≤ "–∫—É—Ä—Å–∞–º")  
                elif theme_word.startswith(ru_word) and len(ru_word) >= 4:
                    word_found = True
                    break
                # –°–ª–æ–≤–æ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–æ–º (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–∞–≤—Ç–æ—Å–µ—Ä–≤–∏—Å" —Å–æ–¥–µ—Ä–∂–∏—Ç "—Å–µ—Ä–≤–∏—Å")
                elif theme_word.endswith(ru_word) and len(ru_word) >= 4:
                    word_found = True
                    break
            
            if word_found:
                found_terms.append(en_word)
        
        # –ü–†–ò–û–†–ò–¢–ï–¢–ù–´–ï –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ç–µ–º–∞—Ç–∏–∫
        
        # 1. –§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —É—Å–ª—É–≥–∏ - –í–´–°–®–ò–ô –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç
        financial_indicators = [
            '—Ñ–∏–Ω–∞–Ω—Å–æ–≤–∞—è', '—Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π', '–∏–Ω–≤–µ—Å—Ç–∏—Ü', '–∫—Ä–µ–¥–∏—Ç', '–±–∞–Ω–∫', '—Å—Ç—Ä–∞—Ö–æ–≤',
            '–Ω–∞–ª–æ–≥', '–∞—É–¥–∏—Ç', '–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ', '—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ', '–∞–Ω–∞–ª–∏–∑', '–æ—Ü–µ–Ω–∫–∞',
            'financial', 'investment', 'banking', 'consulting', 'consultant'
        ]
        
        financial_detected = False
        for indicator in financial_indicators:
            for theme_word in theme_words:
                if theme_word == indicator or theme_word.startswith(indicator) or theme_word.endswith(indicator):
                    financial_detected = True
                    break
            if financial_detected:
                break
        
        # –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω—ã —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —Ç–µ—Ä–º–∏–Ω—ã + –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è = financial
        if financial_detected and ('–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è' in theme_lower or 'consultant' in found_terms):
            activity_type = 'financial'
        
        # 2. –ê–≤—Ç–æ–º–æ–±–∏–ª—å–Ω–∞—è —Ç–µ–º–∞—Ç–∏–∫–∞  
        automotive_indicators = [
            '–∞–≤—Ç–æ–º–æ–±–∏–ª', '–º–∞—à–∏–Ω', '–∞–≤—Ç–æ', '–∞–≤—Ç–æ—Å–µ—Ä–≤–∏—Å', '–∞–≤—Ç–æ–º–æ–π–∫–∞', '—ç–≤–∞–∫—É–∞—Ç–æ—Ä',
            '—Ç—é–Ω–∏–Ω–≥', '—à–∏–Ω–æ–º–æ–Ω—Ç–∞–∂', '–∞–≤—Ç–æ–∑–∞–ø—á–∞—Å—Ç–∏', '–¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞', 'cars', 'automotive'
        ]
        
        if activity_type == 'service':  # –¢–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—â–µ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ
            for indicator in automotive_indicators:
                for theme_word in theme_words:
                    if theme_word == indicator or theme_word.startswith(indicator) or theme_word.endswith(indicator):
                        activity_type = 'automotive'
                        break
                if activity_type == 'automotive':
                    break
        
        # –¢–æ–ª—å–∫–æ –µ—Å–ª–∏ –ù–ï –∞–≤—Ç–æ–º–æ–±–∏–ª—å–Ω–∞—è —Ç–µ–º–∞, –ø—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ç–∏–ø—ã –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        if activity_type == 'service':
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –ø–µ—Ä–µ–≤–µ–¥–µ–Ω–Ω—ã—Ö —Ç–µ—Ä–º–∏–Ω–æ–≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º –±–∏–∑–Ω–µ—Å–∞
            for business_type, keywords in self.business_types.items():
                # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ—á–Ω—ã–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è —Å –∞–Ω–≥–ª–∏–π—Å–∫–∏–º–∏ —Ç–µ—Ä–º–∏–Ω–∞–º–∏
                for found_term in found_terms:
                    if found_term in keywords:
                        activity_type = business_type
                        break
                if activity_type != 'service':
                    break
            
            # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –ø–æ –∞–Ω–≥–ª–∏–π—Å–∫–∏–º —Ç–µ—Ä–º–∏–Ω–∞–º, –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ —Ä—É—Å—Å–∫–∏–º –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º –≤ —Ç–µ–º–µ
            if activity_type == 'service':
                for business_type, keywords in self.business_types.items():
                    for keyword in keywords:
                        # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç—É –∂–µ –ª–æ–≥–∏–∫—É —É–º–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞
                        keyword_found = False
                        
                        for theme_word in theme_words:
                            # –¢–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
                            if keyword == theme_word:
                                keyword_found = True
                                break
                            # –°–ª–æ–≤–æ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –∫–ª—é—á–µ–≤–æ–≥–æ —Å–ª–æ–≤–∞  
                            elif theme_word.startswith(keyword) and len(keyword) >= 4:
                                keyword_found = True
                                break
                            # –°–ª–æ–≤–æ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–æ–º
                            elif theme_word.endswith(keyword) and len(keyword) >= 4:
                                keyword_found = True
                                break
                        
                        if keyword_found:
                            activity_type = business_type
                            break
                    if activity_type != 'service':
                        break
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Ç–µ–º—É
        main_topic = self._extract_main_topic(theme_lower, found_terms)
        
        context = {
            'category': 'smart_analysis',
            'business_type': main_topic,
            'activity_type': activity_type,
            'english_terms': found_terms[:5],  # –¢–æ–ø-5 —Ç–µ—Ä–º–∏–Ω–æ–≤
            'confidence': 0.9 if found_terms else 0.6,
            'keywords': found_terms[:3],
            'environment': f"professional {main_topic} {activity_type}"
        }
        
        if not silent_mode:
            print(f"üéØ –¢–∏–ø –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏: {activity_type}")
            print(f"üî§ –ù–∞–π–¥–µ–Ω—ã —Ç–µ—Ä–º–∏–Ω—ã: {', '.join(found_terms[:3])}")
        
        return context
    
    def _extract_main_topic(self, theme_lower, found_terms):
        """–ò–∑–≤–ª–µ–∫–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω—É—é —Ç–µ–º—É –∏–∑ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Ç–µ—Ä–º–∏–Ω–æ–≤ –ø–æ –≤–∞–∂–Ω–æ—Å—Ç–∏ –∏ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω–æ—Å—Ç–∏"""
        if not found_terms:
            return theme_lower.split()[0] if theme_lower else 'business'
        
        # –î–ª—è —è–∑—ã–∫–æ–≤—ã—Ö –∫—É—Ä—Å–æ–≤ —Å–æ–∑–¥–∞–µ–º —Å–æ—Å—Ç–∞–≤–Ω—É—é —Ç–µ–º—É
        if 'training' in found_terms:
            languages = ['english', 'french', 'german', 'spanish', 'italian', 'chinese', 'japanese']
            found_language = None
            
            for lang in languages:
                if lang in found_terms:
                    found_language = lang
                    break
            
            if found_language:
                return f"{found_language} courses"
        
        # –ò—â–µ–º —Å–∞–º—ã–π —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–π —Ç–µ—Ä–º–∏–Ω (—Å–æ—Å—Ç–∞–≤–Ω—ã–µ —Ñ—Ä–∞–∑—ã –≤–∞–∂–Ω–µ–µ –æ–¥–∏–Ω–æ—á–Ω—ã—Ö —Å–ª–æ–≤)
        # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –¥–ª–∏–Ω–µ - –±–æ–ª–µ–µ –¥–ª–∏–Ω–Ω—ã–µ —Ç–µ—Ä–º–∏–Ω—ã –æ–±—ã—á–Ω–æ –±–æ–ª–µ–µ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã
        sorted_terms = sorted(found_terms, key=len, reverse=True)
        
        # –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç —Å–æ—Å—Ç–∞–≤–Ω—ã–º —Ç–µ—Ä–º–∏–Ω–∞–º (—Å–æ–¥–µ—Ä–∂–∞—â–∏–º –ø—Ä–æ–±–µ–ª—ã)
        for term in sorted_terms:
            if ' ' in term:  # —Å–æ—Å—Ç–∞–≤–Ω—ã–µ —Ç–µ—Ä–º–∏–Ω—ã —Ç–∏–ø–∞ "car service", "food delivery"
                return term
        
        # –ï—Å–ª–∏ —Å–æ—Å—Ç–∞–≤–Ω—ã—Ö –Ω–µ—Ç, –±–µ—Ä–µ–º —Å–∞–º—ã–π –¥–ª–∏–Ω–Ω—ã–π –æ–¥–∏–Ω–æ—á–Ω—ã–π —Ç–µ—Ä–º–∏–Ω
        return sorted_terms[0]
    
    def generate_prompts(self, theme, silent_mode=False):
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –Ω–∞–±–æ—Ä –ø—Ä–æ–º–ø—Ç–æ–≤ –¥–ª—è —Ç–µ–º–∞—Ç–∏–∫–∏"""
        context = self.analyze_theme(theme, silent_mode)
        
        business_type = context['business_type']
        activity_type = context['activity_type']
        
        # –ë–∞–∑–æ–≤—ã–µ —à–∞–±–ª–æ–Ω—ã –ø—Ä–æ–º–ø—Ç–æ–≤
        base_prompts = [
            f"professional {business_type} service office interior",
            f"modern {business_type} equipment and workspace",
            f"expert team providing {business_type} services",
            f"high quality {business_type} process in action",
            f"satisfied customer receiving {business_type} service",
            f"clean organized {business_type} business environment",
            f"professional {business_type} consultation meeting",
            f"reliable {business_type} service delivery"
        ]
        
        # –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–æ–º–ø—Ç—ã –ø–æ —Ç–∏–ø—É –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        specialized = self._get_specialized_prompts(activity_type, business_type)
        
        # –ö–æ–º–±–∏–Ω–∏—Ä—É–µ–º –±–∞–∑–æ–≤—ã–µ –∏ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ
        all_prompts = base_prompts + specialized
        
        # –í—ã–±–∏—Ä–∞–µ–º 8 –ª—É—á—à–∏—Ö –ø—Ä–æ–º–ø—Ç–æ–≤
        selected_prompts = self._select_best_prompts(all_prompts, 8)
        
        if not silent_mode:
            print(f"‚úÖ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ {len(selected_prompts)} –ø—Ä–æ–º–ø—Ç–æ–≤ –¥–ª—è {theme}")
        
        return selected_prompts
    
    def _get_specialized_prompts(self, activity_type, business_type):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–æ–º–ø—Ç—ã –ø–æ —Ç–∏–ø—É –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏"""
        
        # –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã –ø—Ä–æ–º–ø—Ç–æ–≤ –ø–æ —Ç–∏–ø–∞–º –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        activity_templates = {
            'automotive': [
                f"professional automotive service garage with modern {business_type} equipment",
                f"clean well-organized automotive workshop with professional tools",
                f"experienced auto mechanic working on vehicle in modern garage",
                f"comfortable customer waiting area in automotive service center",
                f"high-tech diagnostic equipment for {business_type}",
                f"professional automotive technician using modern tools",
                f"modern vehicle service bay with professional equipment",
                f"mobile {business_type} van with professional automotive tools"
            ],
            'investment': [
                f"professional financial advisor explaining {business_type}",
                f"modern office setting for {business_type} consultation",
                f"charts and graphs showing {business_type} growth",
                f"confident investor learning about {business_type}",
                f"professional presentation about {business_type} strategies"
            ],
            'training': [
                f"modern classroom with students learning {business_type}",
                f"professional instructor teaching {business_type} lesson",
                f"interactive {business_type} learning session",
                f"students engaged in {business_type} conversation practice",
                f"educational environment for {business_type} courses",
                f"group study session for {business_type} learning",
                f"modern language school classroom with {business_type} materials",
                f"teacher explaining {business_type} grammar on whiteboard"
            ],
            'food': [
                f"professional kitchen preparing {business_type}",
                f"fresh ingredients for {business_type} dishes",
                f"chef creating delicious {business_type} meal",
                f"elegant restaurant serving {business_type}",
                f"appetizing {business_type} presentation on plate"
            ],
            'healthcare': [
                f"clean medical facility for {business_type}",
                f"professional healthcare provider offering {business_type}",
                f"modern medical equipment for {business_type}",
                f"comfortable patient area in {business_type} clinic",
                f"sterile medical environment for {business_type} procedures"
            ],
            'beauty': [
                f"elegant salon interior for {business_type} services",
                f"professional stylist providing {business_type}",
                f"relaxing spa environment for {business_type}",
                f"modern beauty equipment for {business_type}",
                f"luxurious treatment room for {business_type} services"
            ],
            'construction': [
                f"professional construction site with {business_type} work",
                f"modern construction equipment for {business_type}",
                f"skilled workers performing {business_type} tasks",
                f"well-organized workshop for {business_type} projects",
                f"high-quality materials for {business_type} construction"
            ],
            'retail': [
                f"modern showroom displaying {business_type}",
                f"well-organized store with {business_type} products",
                f"professional sales environment for {business_type}",
                f"attractive product display of {business_type}",
                f"customer-friendly retail space for {business_type}"
            ]
        }
        
        # –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è –¥–æ—Å—Ç–∞–≤–∫–∏ –µ–¥—ã
        if 'food delivery' in business_type.lower() or 'delivery' in business_type.lower():
            return [
                "delicious hot pizza ready for delivery",
                "fresh salad bowls and healthy meals",
                "gourmet burger and fries meal",
                "asian noodle dishes and sushi platters",
                "professional food delivery packaging"
            ]
        
        # –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è —è–∑—ã–∫–æ–≤—ã—Ö –∫—É—Ä—Å–æ–≤
        if 'courses' in business_type.lower() and activity_type == 'training':
            return [
                f"modern classroom with students learning {business_type}",
                f"professional teacher explaining {business_type} lesson",
                f"interactive {business_type} conversation practice",
                f"students engaged in {business_type} group study",
                f"language school classroom with {business_type} materials",
                f"instructor teaching {business_type} grammar",
                f"students practicing {business_type} speaking skills",
                f"modern educational environment for {business_type}"
            ]
        
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —à–∞–±–ª–æ–Ω—ã –¥–ª—è —Ç–∏–ø–∞ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏–ª–∏ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ
        return activity_templates.get(activity_type, [
            f"professional {business_type} service environment",
            f"modern {business_type} workplace setup",
            f"quality {business_type} service delivery",
            f"trusted {business_type} business facility",
            f"expert team providing {business_type} services"
        ])
    
    def _select_best_prompts(self, prompts, count):
        """–í—ã–±–∏—Ä–∞–µ—Ç –ª—É—á—à–∏–µ –ø—Ä–æ–º–ø—Ç—ã –∏–∑–±–µ–≥–∞—è –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π"""
        selected = []
        used_keywords = set()
        
        for prompt in prompts:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
            words = prompt.lower().split()
            key_words = [w for w in words if len(w) > 4]
            
            if not any(word in used_keywords for word in key_words[:3]):
                selected.append(prompt)
                used_keywords.update(key_words[:3])
                
                if len(selected) >= count:
                    break
        
        # –ï—Å–ª–∏ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç, –¥–æ–±–∞–≤–ª—è–µ–º –æ—Å—Ç–∞–≤—à–∏–µ—Å—è
        while len(selected) < count and len(selected) < len(prompts):
            for prompt in prompts:
                if prompt not in selected:
                    selected.append(prompt)
                    if len(selected) >= count:
                        break
        
        return selected
    
    def _select_random_variant(self, variants):
        """–í—ã–±–∏—Ä–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –∏–∑ —Å–ø–∏—Å–∫–∞"""
        return random.choice(variants) if variants else ""

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å –¥—Ä—É–≥–∏–º–∏ –º–æ–¥—É–ª—è–º–∏
def create_thematic_prompts(theme_input):
    """–°–æ–∑–¥–∞–µ—Ç —Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–º–ø—Ç—ã –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π"""
    generator = SmartPromptGenerator()
    return generator.generate_prompts(theme_input, silent_mode=True)

def create_human_focused_review_prompts():
    """
    –°–æ–∑–¥–∞–µ—Ç –ø—Ä–æ–º–ø—Ç—ã –¥–ª—è review –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –ì–ê–†–ê–ù–¢–ò–†–û–í–ê–ù–ù–û –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç –ª—é–¥–µ–π
    """
    # –ö–†–ò–¢–ò–ß–ù–û: –¢–æ–ª—å–∫–æ –æ–±—ã—á–Ω—ã–µ –ª—é–¥–∏-–∫–ª–∏–µ–Ω—Ç—ã, –ù–ï –†–ê–ë–û–¢–ù–ò–ö–ò!
    person_types = [
        "happy customer", "satisfied client", "pleased woman", "smiling man",
        "grateful person", "content customer", "cheerful client", "positive person",
        "thankful customer", "delighted client", "appreciative woman", "joyful man",
        "happy female customer", "satisfied male client", "pleased young woman", 
        "smiling young man", "grateful middle-aged person", "content elderly customer"
    ]
    
    ages = [
        "young adult", "middle-aged person", "mature adult", "30-40 years old",
        "25-35 years old", "40-50 years old", "adult person", "20-30 years old",
        "35-45 years old", "mature woman", "mature man"
    ]
    
    expressions = [
        "genuine smile", "happy expression", "satisfied look", "positive facial expression",
        "authentic joy", "natural smile", "pleased appearance", "grateful expression",
        "bright smile", "warm expression", "joyful face", "content expression"
    ]
    
    backgrounds = [
        "clean background", "neutral background", "simple background", "white background",
        "professional background", "minimal background", "soft background"
    ]
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º 3 —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö review –ø—Ä–æ–º–ø—Ç–∞
    review_prompts = []
    for i in range(3):
        person = random.choice(person_types)
        age = random.choice(ages)
        expression = random.choice(expressions)
        background = random.choice(backgrounds)
        
        # –†–ê–î–ò–ö–ê–õ–¨–ù–´–ô –ø—Ä–æ–º–ø—Ç - –¢–û–õ–¨–ö–û –õ–Æ–î–ò!
        prompt = (
            f"portrait photo of {person}, {age}, {expression}, "
            f"HUMAN FACE ONLY, PERSON ONLY, NO OBJECTS VISIBLE, NO EQUIPMENT, "
            f"NO BUSINESS ITEMS, NO WORK TOOLS, NO UNIFORMS, NO PROFESSIONAL GEAR, "
            f"civilian clothes, casual clothing, regular person, everyday clothes, "
            f"customer testimonial portrait, {background}, "
            f"professional headshot style, natural lighting, "
            f"close-up face shot, human portrait only, customer review photo"
        )
        
        review_prompts.append(prompt)
    
    return review_prompts

def create_complete_prompts_dict(theme_input):
    """
    –°–æ–∑–¥–∞–µ—Ç –ø–æ–ª–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å –ø—Ä–æ–º–ø—Ç–æ–≤ –¥–ª—è –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤–∫–ª—é—á–∞—è review —Å –ª—é–¥—å–º–∏
    """
    import random  # –î–ª—è —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—è main –ø—Ä–æ–º–ø—Ç–æ–≤
    
    generator = SmartPromptGenerator()
    context = generator.analyze_theme(theme_input, silent_mode=True)
    
    business_type = context['business_type']
    activity_type = context['activity_type']
    
    # –£–ú–ù–ê–Ø –ê–î–ê–ü–¢–ò–í–ù–ê–Ø –°–ü–ï–¶–ò–§–ò–ß–ù–û–°–¢–¨: 8.5+ –±–∞–ª–ª–æ–≤
    
    # –ë–∞–∑–æ–≤–∞—è –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞
    core_base = f"professional {business_type} {activity_type} service"
    quality_base = f"modern high quality expert {business_type}"
    
    # –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–µ –¥–µ—Ç–∞–ª–∏ –ø–æ —Ç–∏–ø—É –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Å –†–ê–ó–ù–û–û–ë–†–ê–ó–ù–´–ú–ò main –ø—Ä–æ–º–ø—Ç–∞–º–∏
    
    adaptive_details = {
        'automotive': {
            'main': random.choice([
                'modern automotive service center exterior with professional signage and clean facility',
                'skilled mechanic team working on vehicles in well-equipped garage',
                'satisfied customers receiving keys to their serviced vehicles',
                'professional automotive workshop showcasing expertise and quality service',
                'clean organized automotive facility with modern equipment and branding'
            ]),
            'about1': 'specialized diagnostic equipment and professional automotive tools',
            'about2': 'hands-on vehicle service process with technical expertise',
            'about3': 'certified automotive workshop with quality assurance standards'
        },
        'training': {
            'main': random.choice([
                'professional instructor teaching engaged students in modern learning environment',
                'successful graduates celebrating completion of professional training program',
                'interactive educational session with expert knowledge sharing',
                'modern educational facility exterior with professional branding and signage',
                'diverse group of students actively participating in hands-on learning'
            ]),
            'about1': 'interactive learning equipment and educational technology tools',
            'about2': 'engaging teaching process with student-instructor interaction',
            'about3': 'accredited learning environment with educational quality standards'
        },
        'food': {
            'main': random.choice([
                'appetizing signature dishes beautifully presented on elegant dining table',
                'professional chef team preparing gourmet meals in modern kitchen',
                'welcoming restaurant exterior with attractive storefront and professional signage',
                'satisfied customers enjoying delicious meals in comfortable dining environment',
                'fresh high-quality ingredients artfully arranged for culinary preparation'
            ]),
            'about1': 'commercial kitchen equipment and professional culinary tools',
            'about2': 'food preparation process with culinary expertise and hygiene',
            'about3': 'certified food facility with health and safety standards'
        },
        'healthcare': {
            'main': random.choice([
                'compassionate healthcare professional providing excellent patient care',
                'modern medical facility exterior with professional healthcare branding',
                'successful patient recovery showcasing positive healthcare outcomes',
                'advanced medical technology ensuring precise diagnosis and treatment',
                'welcoming healthcare reception with comfortable patient environment'
            ]),
            'about1': 'advanced medical equipment and specialized healthcare tools',
            'about2': 'patient care process with medical expertise and compassion',
            'about3': 'sterile healthcare environment with medical quality standards'
        },
        'financial': {
            'main': random.choice([
                'professional financial advisor consulting with satisfied clients in modern office',
                'expert financial consultant presenting investment strategies and portfolio analysis',
                'successful financial planning meeting with wealth management specialist',
                'prestigious financial services office with professional consulting environment',
                'experienced financial advisor providing personalized investment guidance'
            ]),
            'about1': 'advanced financial analysis software and professional investment tools',
            'about2': 'comprehensive financial planning process with expert market knowledge',
            'about3': 'certified financial advisory office with regulatory compliance standards'
        },
        'legal': {
            'main': random.choice([
                'professional legal consultation with experienced attorney in law office',
                'expert lawyer providing comprehensive legal advice to clients',
                'prestigious law firm exterior with professional legal branding',
                'successful legal team celebrating favorable case outcome',
                'modern legal office with professional consultation environment'
            ]),
            'about1': 'comprehensive legal research tools and professional law library',
            'about2': 'detailed legal consultation process with expert jurisprudence',
            'about3': 'certified law practice with professional ethics standards'
        },
        'marketing': {
            'main': random.choice([
                'creative marketing team developing innovative advertising campaigns',
                'successful brand promotion results showcasing marketing effectiveness',
                'modern marketing agency with dynamic creative workspace',
                'professional marketing consultant presenting strategic campaign plans',
                'digital marketing specialists analyzing campaign performance metrics'
            ]),
            'about1': 'advanced marketing analytics tools and creative design software',
            'about2': 'strategic marketing campaign development with creative expertise',
            'about3': 'results-driven marketing agency with proven success records'
        },
        'it_services': {
            'main': random.choice([
                'skilled software developers creating innovative technology solutions',
                'modern IT company office with advanced development infrastructure',
                'successful software deployment celebrating technical achievement',
                'professional IT consultants providing technology strategy guidance',
                'expert programmers collaborating on cutting-edge software projects'
            ]),
            'about1': 'state-of-the-art development equipment and programming tools',
            'about2': 'comprehensive software development process with technical expertise',
            'about3': 'certified IT services company with quality assurance standards'
        },
        'real_estate': {
            'main': random.choice([
                'professional real estate agent showcasing premium property portfolio',
                'successful property transaction with satisfied buyer and seller',
                'luxury real estate office with prestigious property listings',
                'expert property consultant providing market analysis and valuation',
                'modern real estate showroom with high-end property presentations'
            ]),
            'about1': 'advanced property management software and market analysis tools',
            'about2': 'comprehensive real estate transaction process with expert guidance',
            'about3': 'licensed real estate agency with professional certification standards'
        },
        'logistics': {
            'main': random.choice([
                'efficient logistics operation with modern warehouse and delivery fleet',
                'professional logistics team coordinating seamless supply chain management',
                'advanced logistics facility with automated storage and distribution systems',
                'successful cargo delivery showcasing reliable transportation services',
                'expert logistics consultants optimizing supply chain efficiency'
            ]),
            'about1': 'state-of-the-art logistics equipment and tracking technology',
            'about2': 'streamlined logistics process with precision delivery management',
            'about3': 'certified logistics facility with quality assurance protocols'
        },
        'tourism': {
            'main': random.choice([
                'amazing travel destination showcasing unforgettable tourism experiences',
                'professional tour guide leading engaging cultural exploration',
                'luxury travel agency office with premium vacation packages',
                'satisfied tourists enjoying expertly planned travel itinerary',
                'beautiful hotel reception welcoming international guests'
            ]),
            'about1': 'comprehensive travel planning tools and destination expertise',
            'about2': 'personalized tourism service with cultural immersion experience',
            'about3': 'certified travel agency with quality tourism standards'
        }
    }
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –¥–µ—Ç–∞–ª–∏ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–µ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ
    details = adaptive_details.get(activity_type, {
        'main': random.choice([
            f'professional {business_type} team delivering excellent service to satisfied customers',
            f'modern {business_type} facility exterior with professional branding and signage',
            f'successful {business_type} results showcasing quality work and expertise',
            f'expert specialists working with {business_type} using professional techniques',
            f'premium {business_type} service environment with modern equipment and professional atmosphere'
        ]),
        'about1': 'specialized equipment and professional service tools',
        'about2': 'efficient service process with expert knowledge and care',
        'about3': 'organized facility with professional quality standards'
    })
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–º–Ω—ã–µ –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–µ –ø—Ä–æ–º–ø—Ç—ã —Å —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–º–∏ main –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
    main_prompts = {
        'main': f"{core_base}, {quality_base} {details['main']}",
        'about1': f"{core_base} equipment workspace, {quality_base} {details['about1']}", 
        'about2': f"{core_base} active operations, {quality_base} {details['about2']}",
        'about3': f"{core_base} facility environment, {quality_base} {details['about3']}"
    }
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ß–ï–õ–û–í–ï–ß–ï–°–ö–ò–ï review –ø—Ä–æ–º–ø—Ç—ã
    human_reviews = create_human_focused_review_prompts()
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ñ–∞–≤–∏–∫–æ–Ω–∫—É
    favicon_prompt = f"{theme_input} icon symbol, simple minimalist logo, business emblem"
    
    # –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ –≤–º–µ—Å—Ç–µ
    complete_prompts = {
        'main': main_prompts['main'],
        'about1': main_prompts['about1'],
        'about2': main_prompts['about2'], 
        'about3': main_prompts['about3'],
        'review1': human_reviews[0],
        'review2': human_reviews[1],
        'review3': human_reviews[2],
        'favicon': favicon_prompt
    }
    
    return complete_prompts

def create_landing_prompt(country, city, language, domain, theme):
    """
    –°–æ–∑–¥–∞–µ—Ç –ø—Ä–æ–º–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ª–µ–Ω–¥–∏–Ω–≥–∞
    
    Args:
        country (str): –ù–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã
        city (str): –ù–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞
        language (str): –Ø–∑—ã–∫ –ª–µ–Ω–¥–∏–Ω–≥–∞ (–∫–æ–¥)
        domain (str): –î–æ–º–µ–Ω —Å–∞–π—Ç–∞
        theme (str): –¢–µ–º–∞—Ç–∏–∫–∞ –ª–µ–Ω–¥–∏–Ω–≥–∞
    
    Returns:
        str: –ì–æ—Ç–æ–≤—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è Cursor AI
    """
    from shared.helpers import get_current_year, get_language_display_name
    
    current_year = get_current_year()
    
    # –ü–æ–ª—É—á–∞–µ–º —á–µ–ª–æ–≤–µ–∫–æ-—á–∏—Ç–∞–µ–º–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —è–∑—ã–∫–∞
    language_display = get_language_display_name(country)
    
    return f"""[0] –ú–Ω–µ –Ω—É–∂–µ–Ω –ø—Ä–æ–¥–∞—é—â–∏–π –ª–µ–Ω–¥–∏–Ω–≥ –ø–µ–π–¥–∂, —Ç–µ–º–∞—Ç–∏–∫–∞: {theme} ({country}).
–Ø–∑—ã–∫ –ª–µ–Ω–¥–∏–Ω–≥–∞: {language_display}
–î–æ–º–µ–Ω: {domain}
–µ—â–µ –º–æ–º–µ–Ω—Ç: —Ç–∞–º –≤ –ø—Ä–æ–º–ø—Ç–µ —É–∫–∞–∑–∞–Ω–æ, —á—Ç–æ–±—ã —Å—Å—ã–ª–∫–∏ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –≤–Ω–µ—à–Ω–∏—Ö (–ø–æ–ª–∏—Ç–∏–∫–∞, –ø—Ä–∞–≤–∏–ª–∞ –∏ —Ç.–¥.) , –±—ã–ª–∞ href="index.php" –∞ –Ω–µ href="index.html"
–∑–∞ —ç—Ç–∏–º –Ω—É–∂–Ω–æ —Å–ª–µ–¥–∏—Ç—å
–°—Ç—Ä–∞–Ω–∞ - {country}
–ì–æ—Ä–æ–¥ - {city}
–í–µ–∑–¥–µ —Å—Ç–∞–≤—å {current_year} –∫–∞–∫ –¥–∞—Ç—É

[1] –≠—Ç–æ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å 1 —Å—Ç—Ä–∞–Ω–∏—á–Ω—ã–π –ª–µ–Ω–¥–∏–Ω–≥, –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–π, –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –Ω—É–∂–Ω–æ —Ä–∞–±–æ—á–µ–µ –º–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é. –í –ø–∞–ø–∫–µ media –µ—Å—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫–∏, –∏—Å–ø–æ–ª—å–∑—É–π –∏—Ö –≤—Å–µ!
–±–ª–æ–∫–∏ –∏ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –¥–æ–ª–∂–Ω—ã –≤—ã–≥–ª—è–¥–µ—Ç—å –∫—Ä–∞—Å–∏–≤–æ –Ω–∞ –í–°–ï–• —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö, –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ –≤–º–µ—â–∞–µ—Ç—Å—è, —Ç–æ —É–¥–ª–∏–Ω—è–π —Å—Ç—Ä–∞–Ω–∏—Ü—É, –¥–µ–ª–∞–π –∫–æ–Ω—Ç–µ–Ω—Ç —Å—Ç–æ–ª–±–∏–∫–æ–º display flex, flex-direction column. –ë–ª–æ–∫–∏, –≥–¥–µ —Ç—Ä–∏ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –Ω–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –Ω–∞ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ—á–∫–µ.

[2] –ù—É–∂–µ–Ω –ø—Ä–æ–¥–∞—é—â–∏–π —Ç–µ–∫—Å—Ç –Ω–∞ —ç—Ç–æ–º –ª–µ–Ω–¥–∏–Ω–≥–µ, –Ω–æ —á—Ç–æ–±—ã –µ–≥–æ –ø—Ä–æ–ø—É—Å—Ç–∏–ª–∏ –≤ –≥—É–≥–ª –∞–¥—Å.
–¢–æ –µ—Å—Ç—å –±–µ–∑ –ª–æ–∂–Ω—ã—Ö –æ–±–µ—â–∞–Ω–∏–π –∏ —Ç.–¥. –¢–∞–∫–∂–µ –≤ —Ç–µ–∫—Å—Ç–µ –Ω–∞ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –Ω–∏–∫–∞–∫–∏—Ö —É–ø–æ–º–∏–Ω–∞–Ω–∏–π –æ–± –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è—Ö, –ø–æ–ª–∏—Ç–∏–∫–µ, –∞–∫—Ü–∏—è—Ö, —Ñ–∏–Ω–∞–Ω—Å–∞—Ö –∏ —Ç–¥. –¢–∞–∫–∂–µ —Å –æ—Ç–∫–∞–∑–æ–º –æ—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∏ —Ç.–¥. –¢–µ–∫—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ –Ω–∞ 2-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, –∞ –±–æ–ª—å—à–µ, —Å—Ç–æ–ª—å–∫–æ-—Å–∫–æ–ª—å–∫–æ —Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–ª—è —Ö–æ—Ä–æ—à–µ–π –∫–æ–Ω–≤–µ—Ä—Å–∏–∏ —Å–∞–π—Ç–∞. –ú–∏–Ω–∏–º—É–º 5 –±–ª–æ–∫–æ–≤, –≤ –∫–∞–∂–¥–æ–º –∏–∑ –∫—Ç–æ—Ä—ã—Ö 3-5 –∞–±–∑–∞—Ü–µ–≤, –ø–æ 2-5 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –≤ –∫–∞–∂–¥–æ–º.

[3] –í —Ñ—É—Ç–µ—Ä–µ –Ω—É–∂–Ω—ã –ø–æ–ª–∏—Ç–∏–∫–∏ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏, —É—Å–ª–æ–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∏ —Ç.–¥., —Å–∞–º –¥–æ–¥—É–º–∞–π —á—Ç–æ –µ—â—ë –Ω—É–∂–Ω–æ –¥–ª—è —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Å–∞–π—Ç–∞ –∏ –¥–æ–±–∞–≤—å. –í—Å–µ —ç—Ç–∏ –ø–æ–ª–∏—Ç–∏–∫–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö. –ö–∞–∂–¥–∞—è –ø–æ–ª–∏—Ç–∏–∫–∞ –º–∏–Ω–∏–º—É–º –Ω–∞ 10 –ø—É–Ω–∫—Ç–æ–≤ –∏ –æ—á–µ–Ω—å –ø–æ–¥—Ä–æ–±–Ω–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∞, –≤ –∫–∞–∂–¥–æ–º –ø—É–Ω–∫—Ç–µ –º–∏–Ω–∏–º—É–º –ø–æ 3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è

[4] –ù—É–∂–Ω–∞ —Ñ–æ—Ä–º–∞ –∑–∞–∫–∞–∑–∞ —Å –ø–æ–ª—è–º–∏ "–∏–º—è" –∏ "–Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –æ—Ç–ø—Ä–∞–≤–∏—Ç—å/–∑–∞–∫–∞–∑ –∏–ª–∏ –∫–∞–∫ —Ç—ã –µ–µ —Ç–∞–º –Ω–∞–∑–æ–≤–µ—à—å, –¥–æ–ª–∂–µ–Ω –æ—Ç—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–π —Ñ–∞–π–ª "order.php" –ë–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö JavaScript-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤, —Ç–æ–ª—å–∫–æ –±–∞–∑–æ–≤–∞—è HTML5-–≤–∞–ª–∏–¥–∞—Ü–∏—è –∏ –ø—Ä—è–º–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞ order.php. –°–∞–º —Ñ–∞–π–ª order.php –ø–∏—Å–∞—Ç—å –Ω–µ –Ω—É–∂–Ω–æ
–¢–∞–∫ –∂–µ –º–æ–∂–µ—à—å –¥–æ–±–∞–≤–∏—Ç—å –∫–∞–∫–∏–µ-–Ω–∏–±—É–¥—å —Å–≤–æ–∏ –∏–Ω–ø—É—Ç—ã.

[5] –í —Ñ—É—Ç–µ—Ä–µ –¥–æ–±–∞–≤—å –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π –µ–º–∞–π–ª —Å –º–æ–∏–º –¥–æ–º–µ–Ω–æ–º –∏ –∫–∞–∫–æ–π –Ω–∏–±—É–¥—å –≤—ã–º—ã—à–ª–µ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —Å—Ç—Ä–∞–Ω—ã –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –ø–∏—à–µ—à—å –ª–µ–Ω–¥–∏–Ω–≥, –µ—â–µ –∞–¥—Ä–µ—Å —Ç–æ–∂–µ –ª—é–±–æ–π –∏–∑ —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω—ã. –í—ã–º—ã—à–ª–µ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä, —ç—Ç–æ –Ω–µ –∑–Ω–∞—á–∏—Ç —á—Ç–æ –æ–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å —Ü–∏—Ñ—Ä–∞–º–∏ 123 456 78 90 –∏–ª–∏ 222 55 12345 –∏ —Ç–æ–º—É –ø–æ–¥–æ–±–Ω—ã—Ö –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –Ω–æ–º–µ—Ä–æ–≤. –≠—Ç–æ –∑–Ω–∞—á–∏—Ç —á—Ç–æ –Ω–æ–º–µ—Ä –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–∞—Å—Ç–æ—è—â–∏–º, –Ω–æ —Ä–∞–Ω–¥–æ–º–Ω—ã–º. 
–†–∞–¥–∏ –±–æ–≥–∞ –º–æ–ª—é, —Å–¥–µ–ª–∞–π –Ω–æ—Ä–º–∞–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä! –Ω–µ 1234567
–í –∞–¥—Ä–µ—Å–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π –Ω–µ—Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ —Ü–∏—Ñ—Ä—ã, —Ç–∞–∫–∏–µ –∫–∞–∫ 123 321 1234 –∏ —Ç.–¥.
–Ø –∑–∞–ø—Ä–µ—â–∞—é –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ –∞–¥—Ä–µ—Å–µ Av. Paseo de la Reforma

[6] –î–æ–±–∞–≤—å –≤—Å–ø–ª—ã–≤–∞—é—â–∏–π –≤–æ–ø—Ä–æ—Å –æ –∫—É–∫–∏ –ø—Ä–∏ –∑–∞—Ö–æ–¥–µ. –°–¥–µ–ª–∞–π –µ–≥–æ –∫—Ä–∞—Å–∏–≤—ã–º

[7] –ù–µ –∑–∞–±—É–¥—å —Ñ–∞–≤–∏–∫–æ–Ω. –§–∞–≤–∏–∫–æ–Ω–æ–º –±—É–¥–µ—Ç –∫–∞—Ä—Ç–∏–Ω–∫–∞ –∏–∑ –ø–∞–ø–∫–∏ —Å –∫–∞—Ä—Ç–∏–Ω–∫–∞–º–∏ favicon.png. –°—Å—ã–ª–∫–∏ –Ω–∞ —Å–æ—Ü—Å–µ—Ç–∏ –¥–µ–ª–∞—Ç—å –Ω–µ –Ω—É–∂–Ω–æ

[8] –°–¥–µ–ª–∞–π –≤—ã–¥–µ–ª—è—é—â–∏–π—Å—è –∏ –∑–∞–ø–æ–º–∏–Ω–∞—é—â–∏–π—Å—è –¥–∏–∑–∞–π–Ω, —á—Ç–æ–±—ã –ª–µ–Ω–¥–∏–Ω–≥ –≤—ã–≥–ª—è–¥–µ–ª –æ–±—ä–µ–º–Ω–æ. –ü–æ–ª–∏—Ç–∏–∫–∏ –ø–∏—à–∏ –±–æ–ª—å—à–∏–µ, –∫–∞–∫ –Ω–∞ —Å–∞–π—Ç–µ –Ω–∞—Å—Ç–æ—è—â–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞. –ò—Å–ø–æ–ª—å–∑—É–π –∫–∞—Å—Ç–æ–º–Ω—ã–µ —à—Ä–∏—Ñ—Ç—ã –∏–∑ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ Google Fonts –∏ –∏–∫–æ–Ω–∫–∏ –∏–∑ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ Font Awesome

[9] –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –≤ –∫–æ–¥–µ –ø–∏—à–∏ —Ç–æ–ª—å–∫–æ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º –∏–ª–∏ {language.lower()}

[10] order.php –∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–ø–∞—Å–∏–±–æ –Ω–µ –Ω—É–∂–Ω—ã, —è —Å–¥–µ–ª–∞—é –∏—Ö –ø–æ–∑–∂–µ. css –∏ js –≤—ã–Ω–µ—Å–∏ –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã, —Ö—Ä–∞–Ω–∏—Ç—å—Å—è –æ–Ω–∏ –¥–æ–ª–∂–Ω—ã –≤ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏.

[11] –í–∞–∂–Ω–æ! –ì–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –Ω–∞–∑–æ–≤–∏ index.html, –Ω–æ –≤–æ –≤—Å–µ—Ö –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö —Å—Å—ã–ª–∫–∞—Ö –Ω–∞ —ç—Ç—É —Å—Ç—Ä–∞–Ω–∏—Ü—É (—Å –¥—Ä—É–≥–∏—Ö —Å—Ç—Ä–∞–Ω–∏—Ü –ø–æ–ª–∏—Ç–∏–∫, —É—Å–ª–æ–≤–∏–π –∏ —Ç.–¥.) –∏—Å–ø–æ–ª—å–∑—É–π –∏–º—è index.php –≤–º–µ—Å—Ç–æ index.html. –¢–æ –µ—Å—Ç—å, –Ω–µ—Å–º–æ—Ç—Ä—è –Ω–∞ —Ç–æ, —á—Ç–æ —Ñ–∞–π–ª –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è index.html, –≤—Å–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –Ω–µ–≥–æ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤–∏–¥–∞ href="index.php" –∏–ª–∏ href="index.php#section". –≠—Ç–æ –Ω—É–∂–Ω–æ –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞ index.html –≤ index.php –Ω–∞ —Ö–æ—Å—Ç–∏–Ω–≥–µ –≤—Å–µ —Å—Å—ã–ª–∫–∏ —Ä–∞–±–æ—Ç–∞–ª–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π. –û–±—Ä–∞—Ç–∏ –Ω–∞ —ç—Ç–æ –æ—Å–æ–±–æ–µ –≤–Ω–∏–º–∞–Ω–∏–µ! –ù–∏–≥–¥–µ –≤ –ø—Ä–æ–µ–∫—Ç–µ –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å <a href="index.html">, —Ç–æ–ª—å–∫–æ <a href="index.php">.

[12] –ö–æ–Ω—Ç–µ–Ω—Ç–∞ –Ω–∞ —Å–∞–π—Ç–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –º–Ω–æ–≥–æ. –ü–∏—à–∏ –¥–ª–∏–Ω–Ω—ã–µ —Ç–µ–∫—Å—Ç—ã, –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–∞—Å–∫—Ä—ã–≤–∞–π –∫–∞–∂–¥—É—é —Ç–µ–º—É, –¥–µ–ª–∞—Ç—å –±–æ–ª—å—à–∏–µ –±–ª–æ–∫–∏, —Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–π –∫–∞–∂–¥—É—é –º—ã—Å–ª—å –≤ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∞–±–∑–∞—Ü–µ–≤

[13] –ù–∞ –ª–µ–Ω–¥–∏–Ω–≥–µ –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∫–Ω–æ–ø–æ–∫/—Å—Å—ã–ª–æ–∫, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞—é—Ç –∏–ª–∏ –Ω–∏–∫—É–¥–∞ –Ω–µ –≤–µ–¥—É—Ç!

[14] –ö–∞–∂–¥—É—é –∑–∞–¥–∞—á—É –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é –Ω–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞ —Å –∫–æ–¥–æ–º (style.css, index.html –∏ —Ç.–ø.) —Ä–∞–∑–¥–µ–ª—è–π –Ω–∞ 3-5 —á–∞—Å—Ç–µ–π –∏–Ω–∞—á–µ —É —Ç–µ–±—è –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è –∑–∞—Ç—É–ø—ã —Å "Error calling tool 'edit_file'.". –¢–æ –µ—Å—Ç—å —Å–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–µ—à—å –±–∞–∑–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É, –∞ –ø–æ—Ç–æ–º —É–∂–µ –¥–æ–ø–æ–ª–Ω—è–µ—à—å –µ–µ –±–ª–æ–∫–∞–º–∏.

[15] –ü–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ª–µ–Ω–¥–∏–Ω–≥–∞ –ø—Ä–æ–≤–µ—Ä—å –µ–≥–æ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –∫–∞–∂–¥–æ–º—É –∏–∑ —ç—Ç–∏—Ö –ø—É–Ω–∫—Ç–æ–≤. –ï—Å–ª–∏ –æ–±–Ω–∞—Ä—É–∂–∏—à—å –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è, —Å—Ä–∞–∑—É —É—Å—Ç—Ä–∞–Ω–∏ –∏—Ö

[16] –Ø –ó–ê–ü–†–ï–©–ê–Æ –ì–†–£–ó–ò–¢–¨ –ß–¢–û-–¢–û –ù–ê –õ–û–ö–ê–õ–¨–ù–´–ô –°–ï–†–í–ï–†

[17] –ü–µ—Ä–µ–¥ —Å–æ–∑–¥–∞–Ω–∏–µ–º –ª–µ–Ω–¥–∏–Ω–≥–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä—É–π UUID, –≤–æ–∑—å–º–∏ –ø–µ—Ä–≤—ã–µ –¥–≤–∞ —Å–∏–º–≤–æ–ª–∞, –ø—Ä–µ–æ–±—Ä–∞–∑—É–π –≤ —á–∏—Å–ª–æ, –≤–æ–∑—å–º–∏ –æ—Å—Ç–∞—Ç–æ–∫ –æ—Ç –¥–µ–ª–µ–Ω–∏—è –Ω–∞ 25, –ø—Ä–∏–±–∞–≤—å 1, –∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø—Ä–∏–º–µ–Ω–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Å—Ç–∏–ª—å –¥–∏–∑–∞–π–Ω–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ 25 –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.

[18] –í–æ –≤—Å–µ—Ö –ø–æ–ª–∏—Ç–∏—á–µ—Å–∫–∏—Ö –±–ª–æ–∫–∞—Ö –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ö–µ–¥–µ—Ä —Å –≤–æ–∑–≤—Ä–∞—Ç–æ–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É, –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∞–¥–∞–ø—Ç–∏–≤–Ω–æ –∏ –Ω–∞ –º–æ–±–∏–ª—å–Ω–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–µ —Ç–∞–∫–∂–µ. –•—ç–¥–µ—Ä –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–∞–π—Ç–∞

[19] –û–ß–ï–ù–¨ –í–ê–ñ–ù–û –ß–¢–û–ë–´ –ö–£–ö–ò –£–í–ï–î–û–ú–õ–ï–ù–ò–ï –†–ê–ë–û–¢–ê–õ–û –ö–û–†–†–ï–ö–¢–ù–û –ò –ë–ï–ó –ö–ê–ö–ò–• –õ–ò–ë–û –ë–ê–ì–û–í, –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û, –î–û–ë–ê–í–õ–Ø–ô console.log –∫–æ–≥–¥–∞ –∫—É–∫–∏ –ø—Ä–∏–Ω—è—Ç–æ

[20] –í –ø–æ–ª–∏—Å–∏—Ç–∏ –±–ª–æ–∫–∞—Ö —Å —Ç–∞–±–ª–∏—Ü–∞–º–∏ –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨ –ü–†–û–í–ï–†–Ø–ô –ê–î–ê–ü–¢–ò–í–ù–û–°–¢–¨! –ú–ù–û–ì–ò–ï –î–í–ò–ì–ê–Æ–°–¢–Ø!

[21] –ù–ï –ò–°–ü–û–õ–¨–ó–£–ô OVERFLOW-X: HIDDEN –ò OVERFLOW-X: AUTO""" 